<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soldesk.healthproject.mapper.ProductCommentMapper">

<!-- 댓글 목록조회(READ) --><!-- 
	<select id="selectProductCommentList" resultType="com.soldesk.healthproject.domain.ProductCommentVO">
		SELECT pcomment_number, product_number, pcomment, pcomment_writer, pcomment_register_date, preply_number, pcomment_delete_flag
		FROM project_health.product_comment
		ORDER BY pcomment_number DESC
	</select>  -->

 <!-- 특정 게시물에 대한 댓글 목록 조회: 페이징 고려 -->
<select id="selectProductCommentList" 
			resultType="com.soldesk.healthproject.domain.ProductCommentVO"
			parameterType="com.soldesk.healthproject.common.paging.domain.ProductCommentPagingDTO">
	<![CDATA[
		SELECT pcomment_number, product_number, pcomment, pcomment_writer, pcomment_register_date, preply_number, pcomment_delete_flag, lvl
		FROM ( 	SELECT /*+ INDEX(a IDX_PRODUCTCOMMENT_PRODUCT_NUMBER_PCOMMENT_NUMBER)  */ ROWNUM rn, LEVEL lvl, a.*
				FROM project_health.product_comment a
				WHERE product_number = #{product_number}
				AND ROWNUM <= (#{pageNum} * #{rowAmountPerPage})
				START WITH preply_number IS NULL
				CONNECT BY PRIOR pcomment_number = preply_number
			  )
		WHERE rn >= ((#{pageNum} * #{rowAmountPerPage}) - (#{rowAmountPerPage} - 1))  

	]]>	
	</select>
	
<!-- 특정 게시물에 대한 댓글 총 개수 -->
	<select id="selectProductRowTotal" resultType="Long" parameterType="String">
		SELECT COUNT(*) FROM project_health.product_comment
		WHERE product_number = #{product_number}
	</select>		
	
<!-- 특정 게시물에 대한 댓글 등록 -->
	<insert id="insertProductCommentForProduct" parameterType="com.soldesk.healthproject.domain.ProductCommentVO">
		<selectKey keyProperty="pcomment_number" order="BEFORE" resultType="long">
			SELECT project_health.seq_product_comment.NEXTVAL FROM dual 
		</selectKey>
	
	INSERT INTO project_health.product_comment
	VALUES (#{pcomment_number},#{product_number},#{pcomment},#{pcomment_writer},DEFAULT,NULL,DEFAULT)	
	
	</insert>

<!-- 댓글에 대한 답글 등록(preply_number: 부모글의 pcomment_number 값) -->
	<insert id="insertProductCommentForProductComment" parameterType="com.soldesk.healthproject.domain.ProductCommentVO">
		<selectKey keyProperty="pcomment_number" order="BEFORE" resultType="long">
			SELECT project_health.seq_product_comment.NEXTVAL FROM dual 
		</selectKey>
	
	INSERT INTO project_health.product_comment
	VALUES (#{pcomment_number},#{product_number},#{pcomment},#{pcomment_writer},DEFAULT,#{preply_number},DEFAULT)	
	</insert>
	
<!-- 특정 게시물에 대한 특정 댓글/답글 조회 -->
	<select id="selectProductComment" resultType="com.soldesk.healthproject.domain.ProductCommentVO">
		SELECT pcomment_number, product_number, pcomment, pcomment_writer, pcomment_register_date, preply_number, pcomment_delete_flag
		FROM project_health.product_comment
		WHERE product_number = #{product_number} AND pcomment_number = #{pcomment_number}	
	</select>
	
<!-- 특정 게시물에 대한 특정 댓글/답글 수정 -->
	<update id="updateProductComment" parameterType="com.soldesk.healthproject.domain.ProductCommentVO">
		UPDATE project_health.product_comment
		SET pcomment = #{pcomment} 
		WHERE product_number = #{product_number} AND pcomment_number = #{pcomment_number}
	</update>

<!-- 특정 게시물에 대한 특정 댓글/답글 삭제요청 -->
	<update id="updatePcommentDeleteFlag">
		DELETE project_health.product_comment
		WHERE product_number = #{product_number} AND pcomment_number = #{pcomment_number}
	</update>

<!-- 특정 게시물에 대한 모든 댓글 삭제 -->
	<delete id="deleteAllProductComment">
		DELETE FROM project_health.product_comment
		WHERE product_number = #{product_number}
	</delete>

</mapper>