<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soldesk.healthproject.mapper.QuestionCommentMapper">

<!-- 댓글 목록조회(READ) --><!-- 
	<select id="selectQuestionCommentList" resultType="com.soldesk.healthproject.domain.QuestionCommentVO">
		SELECT qcomment_number, qpost_number, qcomment, qcomment_writer, qcomment_register_date, qreply_number, qcomment_delete_flag
		FROM project_health.question_comment
		ORDER BY qcomment_number DESC
	</select> --> 

 <!-- 특정 게시물에 대한 댓글 목록 조회: 페이징 고려 -->
	<select id="selectQuestionCommentList" 
			resultType="com.soldesk.healthproject.domain.QuestionCommentVO"
			parameterType="com.soldesk.healthproject.common.paging.domain.QuestionCommentPagingDTO">
	<![CDATA[
		SELECT qcomment_number, qpost_number, qcomment, qcomment_writer, qcomment_register_date, qreply_number, qcomment_delete_flag, lvl
		FROM ( 	SELECT /*+ INDEX(a IDX_QUESTIONCOMMENT_QPOST_NUMBER_QCOMMENT_NUMBER)  */ ROWNUM rn, LEVEL lvl, a.*
				FROM project_health.question_comment a
				WHERE qpost_number = #{qpost_number}
				AND ROWNUM <= (#{pageNum} * #{rowAmountPerPage})
				START WITH qreply_number IS NULL
				CONNECT BY PRIOR qcomment_number = qreply_number
			  )
		WHERE rn >= ((#{pageNum} * #{rowAmountPerPage}) - (#{rowAmountPerPage} - 1))  

	]]>	
	</select>
	
<!-- 특정 게시물에 대한 댓글 총 개수 -->
	<select id="selectQuestionRowTotal" resultType="Long" parameterType="long">
		SELECT COUNT(*) FROM project_health.question_comment
		WHERE qpost_number = #{qpost_number}
	</select>	
	
<!-- 특정 게시물에 대한 댓글 등록 -->
	<insert id="insertQuestionCommentForQuestionBoard" parameterType="com.soldesk.healthproject.domain.QuestionCommentVO">
		<selectKey keyProperty="qcomment_number" order="BEFORE" resultType="long">
			SELECT project_health.seq_question_comment.NEXTVAL FROM dual 
		</selectKey>
	
	INSERT INTO project_health.question_comment
	VALUES (#{qcomment_number},#{qpost_number},#{qcomment},#{qcomment_writer},DEFAULT,NULL,DEFAULT)	
	
	</insert>

<!-- 댓글에 대한 답글 등록(qreply_number: 부모글의 qcomment_number 값) -->
	<insert id="insertQuestionCommentForQuestionComment" parameterType="com.soldesk.healthproject.domain.QuestionCommentVO">
		<selectKey keyProperty="qcomment_number" order="BEFORE" resultType="long">
			SELECT project_health.seq_question_comment.NEXTVAL FROM dual 
		</selectKey>
	
	INSERT INTO project_health.question_comment
	VALUES (#{qcomment_number},#{qpost_number},#{qcomment},#{qcomment_writer},DEFAULT,#{qreply_number},DEFAULT)	
	</insert>
	
<!-- 특정 게시물에 대한 특정 댓글/답글 조회 -->
	<select id="selectQuestionComment" resultType="com.soldesk.healthproject.domain.QuestionCommentVO">
		SELECT qcomment_number, qpost_number, qcomment, qcomment_writer, qcomment_register_date, qreply_number, qcomment_delete_flag
		FROM project_health.question_comment
		WHERE qpost_number = #{qpost_number} AND qcomment_number = #{qcomment_number}	
	</select>
	
<!-- 특정 게시물에 대한 특정 댓글/답글 수정 -->
	<update id="updateQuestionComment" parameterType="com.soldesk.healthproject.domain.QuestionCommentVO">
		UPDATE project_health.question_comment
		SET qcomment = #{qcomment} 
		WHERE qpost_number = #{qpost_number} AND qcomment_number = #{qcomment_number}
	</update>

<!-- 특정 게시물에 대한 특정 댓글/답글 삭제요청 -->
	<update id="updateQcommentDeleteFlag">
		DELETE project_health.question_comment
		WHERE qpost_number = #{qpost_number} AND qcomment_number = #{qcomment_number}
	</update>

<!-- 특정 게시물에 대한 모든 댓글 삭제 -->
	<delete id="deleteAllQuestionComment">
		DELETE FROM project_health.question_comment
		WHERE qpost_number = #{qpost_number}
	</delete>

</mapper>