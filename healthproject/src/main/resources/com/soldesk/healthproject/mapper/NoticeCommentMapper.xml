<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soldesk.healthproject.mapper.NoticeCommentMapper">

<!-- 댓글 목록조회(READ) --><!-- 
	<select id="selectNoticeCommentList" resultType="com.soldesk.healthproject.domain.NoticeCommentVO">
		SELECT ncomment_number, npost_number, ncomment, ncomment_writer, ncomment_register_date, nreply_number, ncomment_delete_flag
		FROM project_health.notice_comment
		ORDER BY ncomment_number DESC
	</select> --> 

 <!-- 특정 게시물에 대한 댓글 목록 조회: 페이징 고려 -->
	<select id="selectNoticeCommentList" 
			resultType="com.soldesk.healthproject.domain.NoticeCommentVO"
			parameterType="com.soldesk.healthproject.common.paging.domain.NoticeCommentPagingDTO">
	<![CDATA[
		SELECT ncomment_number, npost_number, ncomment, ncomment_writer, ncomment_register_date, nreply_number, ncomment_delete_flag, lvl
		FROM ( 	SELECT /*+ INDEX(a IDX_NOTICECOMMENT_NPOST_NUMBER_NCOMMENT_NUMBER)  */ ROWNUM rn, LEVEL lvl, a.*
				FROM project_health.notice_comment a 
				WHERE npost_number = #{npost_number}
				AND ROWNUM <= (#{pageNum} * #{rowAmountPerPage})
				START WITH nreply_number IS NULL
				CONNECT BY PRIOR ncomment_number = nreply_number
			  )
		WHERE rn >= ((#{pageNum} * #{rowAmountPerPage}) - (#{rowAmountPerPage} - 1))  

	]]>	
	</select>

<!-- 특정 게시물에 대한 댓글 총 개수 -->
	<select id="selectNoticeRowTotal" resultType="Long" parameterType="long">
		SELECT COUNT(*) FROM project_health.notice_comment
		WHERE npost_number = #{npost_number}
	</select>
	
<!-- 특정 게시물에 대한 댓글 등록 -->
	<insert id="insertNoticeCommentForNoticeBoard" parameterType="com.soldesk.healthproject.domain.NoticeCommentVO">
		<selectKey keyProperty="ncomment_number" order="BEFORE" resultType="long">
			SELECT project_health.seq_notice_comment.NEXTVAL FROM dual 
		</selectKey>
	
	INSERT INTO project_health.notice_comment
	VALUES (#{ncomment_number},#{npost_number},#{ncomment},#{ncomment_writer},DEFAULT,NULL,DEFAULT)	
	
	</insert>

<!-- 댓글에 대한 답글 등록(nreply_number: 부모글의 ncomment_number 값) -->
	<insert id="insertNoticeCommentForNoticeComment" parameterType="com.soldesk.healthproject.domain.NoticeCommentVO">
		<selectKey keyProperty="ncomment_number" order="BEFORE" resultType="long">
			SELECT project_health.seq_notice_comment.NEXTVAL FROM dual 
		</selectKey>
	
	INSERT INTO project_health.notice_comment
	VALUES (#{ncomment_number},#{npost_number},#{ncomment},#{ncomment_writer},DEFAULT,#{nreply_number},DEFAULT)	
	</insert>
	
<!-- 특정 게시물에 대한 특정 댓글/답글 조회 -->
	<select id="selectNoticeComment" resultType="com.soldesk.healthproject.domain.NoticeCommentVO">
		SELECT ncomment_number, npost_number, ncomment, ncomment_writer, ncomment_register_date, nreply_number, ncomment_delete_flag
		FROM project_health.notice_comment
		WHERE npost_number = #{npost_number} AND ncomment_number = #{ncomment_number}	
	</select>
	
<!-- 특정 게시물에 대한 특정 댓글/답글 수정 -->
	<update id="updateNoticeComment" parameterType="com.soldesk.healthproject.domain.NoticeCommentVO">
		UPDATE project_health.notice_comment
		SET ncomment = #{ncomment} 
		WHERE npost_number = #{npost_number} AND ncomment_number = #{ncomment_number}
	</update>

<!-- 특정 게시물에 대한 특정 댓글/답글 삭제 -->
	<update id="updateNcommentDeleteFlag">
		DELETE project_health.notice_comment
		WHERE npost_number = #{npost_number} AND ncomment_number = #{ncomment_number}
	</update>

<!-- 특정 게시물에 대한 모든 댓글 삭제 -->
	<delete id="deleteAllNoticeComment">
		DELETE FROM project_health.notice_comment
		WHERE npost_number = #{npost_number}
	</delete>

</mapper>